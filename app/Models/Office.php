<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\Office
 *
 * @property int $id
 * @property string|null $name
 * @property string|null $tel
 * @property string|null $email
 * @property string|null $address
 * @property int $is_head
 * @property int $sort_num
 * @method static \Illuminate\Database\Eloquent\Builder|Office newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Office newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Office query()
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereAddress($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereEmail($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereIsHead($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereSortNum($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Office whereTel($value)
 * @mixin \Eloquent
 */
class Office extends Model
{
    use HasFactory;

    protected $table = 'office';
    protected $fillable = ['name', 'tel', 'email', 'address', 'is_head', 'sort_num'];
    public $timestamps = false;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('sort', function ($builder) {
            return $builder->orderBy('sort_num');
        });

        static::saved(function () {
            cache()->forget('offices');
        });
    }
}
